# =============================================================================
# Enterprise Nginx Configuration for AI Weapon Detection System
# High-performance reverse proxy with security, caching, and monitoring
# =============================================================================

# Main configuration optimized for high-throughput AI workloads
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Performance tuning for AI image processing workloads
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # MIME types and character encoding
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset utf-8;

    # Logging format with detailed metrics for monitoring
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time uct="$upstream_connect_time" '
                        'uht="$upstream_header_time" urt="$upstream_response_time" '
                        'cs=$upstream_cache_status';

    access_log /var/log/nginx/access.log main_ext;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes optimized for AI image uploads
    client_body_buffer_size 128k;
    client_max_body_size 50m;  # Allow large image uploads
    client_header_buffer_size 3m;
    large_client_header_buffers 4 256k;
    client_body_timeout 120s;
    client_header_timeout 120s;
    send_timeout 120s;

    # Proxy buffer optimization for AI processing responses
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    proxy_connect_timeout 60s;
    proxy_send_timeout 120s;
    proxy_read_timeout 120s;

    # Gzip compression for API responses
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting for API protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/m;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream configuration with health checks and load balancing
    upstream weapon_detection_backend {
        least_conn;
        server weapon-detection-app:5000 max_fails=3 fail_timeout=30s;
        # Add more backend servers for horizontal scaling
        # server weapon-detection-app-2:5000 max_fails=3 fail_timeout=30s;
        # server weapon-detection-app-3:5000 max_fails=3 fail_timeout=30s;
        
        keepalive 32;
    }

    # Cache configuration for processed images and static content
    proxy_cache_path /var/cache/nginx/ai_cache levels=1:2 keys_zone=ai_cache:100m 
                     max_size=1g inactive=60m use_temp_path=off;

    # Main server configuration
    server {
        listen 80;
        server_name localhost weapon-detection.local;
        
        # Security: Disable server signature
        server_tokens off;
        
        # Root directory
        root /usr/share/nginx/html;
        index index.html;

        # Rate limiting
        limit_conn conn_limit_per_ip 20;

        # Security: Block common exploit attempts
        location ~* \.(php|asp|aspx|jsp)$ {
            deny all;
            return 444;
        }

        # Serve static files directly with aggressive caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "Nginx-Static";
            
            # Optional: serve from CDN or separate static server
            # proxy_pass http://static-assets-server;
        }

        # Health check endpoint (bypass all rate limits)
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Nginx status for monitoring (restrict access in production)
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            access_log off;
        }

        # API endpoints with enhanced security and caching
        location /api/ {
            # Rate limiting for API calls
            limit_req zone=api burst=10 nodelay;
            
            # Proxy to backend
            proxy_pass http://weapon_detection_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Headers for AI processing optimization
            proxy_set_header X-Request-Start $msec;
            proxy_set_header X-Client-IP $remote_addr;
            
            # Cache configuration for detection results
            proxy_cache ai_cache;
            proxy_cache_methods GET HEAD POST;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_key "$scheme$request_method$host$request_uri$request_body";
            proxy_ignore_headers Cache-Control Expires Set-Cookie;
            
            add_header X-Cache-Status $upstream_cache_status;
        }

        # File upload endpoint with special handling
        location /api/detect {
            # Stricter rate limiting for uploads
            limit_req zone=upload burst=5 nodelay;
            
            # Increase timeouts for AI processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 180s;
            proxy_read_timeout 180s;
            
            # Large file upload support
            client_max_body_size 50m;
            client_body_timeout 180s;
            
            proxy_pass http://weapon_detection_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable caching for upload endpoint
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            
            add_header X-Processing-Server $upstream_addr;
        }

        # WebSocket support for real-time detection feeds
        location /ws {
            proxy_pass http://weapon_detection_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket specific timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }

        # Default proxy for all other requests
        location / {
            try_files $uri $uri/ @proxy;
        }

        location @proxy {
            proxy_pass http://weapon_detection_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server configuration (uncomment for SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name weapon-detection.local;
    #     
    #     ssl_certificate /etc/ssl/certs/weapon-detection.crt;
    #     ssl_certificate_key /etc/ssl/private/weapon-detection.key;
    #     
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     add_header Strict-Transport-Security "max-age=31536000" always;
    #     
    #     # Same location blocks as HTTP server
    # }

    # Include additional server configurations
    include /etc/nginx/conf.d/*.conf;
}
